Part 1
======

> Write a short paragraph for every transformation, explaining what you wanted to obtain and explaining the transformations you did, giving both the analysis and transformation parameter values (sufficiently detailed for the evaluator to be able to reproduce the analysis and transformation).

Via STFT we can see that the base frequency is around 100-250 Hz. So let's take a window size to be 44100 * 4 / 100 = 1764. Based on previous week, let's choose these params and visually confirm they work well:

W=hamming; M=1764; N=2048; t=-100; minSineDur: 0.1; nH: 100; minf0: 100; maxf0: 250; 0et: 7; harmDevSlope: 0.01; stocf: 0.2;

- Frequency scaling factors: [0, .7, 1, .5]. Lowers the voice down almost making it impossible but it still sounds as it could be real.

- Frequency stretching factors: [0, 1, 1, 1]. Not preserving timbre seems to put the sound very far from human voice, so let's not touch it.

- Timbre preservation: 0. We don't need this.

- Time scaling factors: [0, 0, .2, 4, .4, .5, .8, 2, 1, 1]. Scaling time preserves sound sounding like voice but does make it sound quite far from original, even almost surreal at times when it gets very slow.



Part 2
======

Sound from: http://freesound.org/people/ko_bx/sounds/368311/

Goal: let's make our melody a bit more bright by converting it to a major instead of a minor and let's hope it'll make the musician's happier :) All we need is to change all notes similar to the first one (is that an F?) half-tone upper. I am doing this very unscientifically by looking at times in audacity while listening, and I'm using a scale factor of 1.13 to make the note half-tone upper.

- window: hamming

- window size: 1100

- FFT size: 2048

- t: -100

- minSineDur: 0.1

- nH: 100

- minf0: 200

- maxf0: 800

- f0et: 7

- harmDevSlope: 0.01

- stocf: 0.1

- Freq scaling: [0, 1.13, .85, 1, .9, 1.13, 1.7, 1, 2.8, 1.13, 3.1, 1, 3.3, 1.13, 3.5, 1, 4.4, 1.13, 4.7, 1, 4.82, 1]

- Freq stretching: [0, 1, 1, 1]

- Timbre preservation: 1

- Time scaling factors: [0, 0, 1, .7] -- let's also make it a bit faster just for fun

Ok, let's check out the result -- well, I have to admit, I wouldn't consider it a success :) But I hope the idea and the attempt were a fun experience, at least to me it definitely was.

As an alternative, let's make something interesting with frequency stretching, setting it to [0,.2,.9,1,.95,.2,1,2]. I think this now sounds a bit more "spacey".